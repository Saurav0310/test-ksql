name: Execute ksqlDB Queries

on:
  workflow_dispatch:
    inputs:
      ksqldb_file:
        description: "Path to the ksqlDB queries file"
        required: true
        default: "queries.sql"

jobs:
  execute-ksqldb:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Confluent Cloud CLI
        run: |
          # Install Confluent Cloud CLI
          curl -sL --http1.1 https://cnfl.io/cli | sh -s -- latest

          # Check the location of the CLI
          echo "Confluent CLI installed in:"
          find $HOME -name confluent -type f

          # Add the CLI path to the environment
          export CLI_PATH=$(find $HOME -name confluent -type f | head -n 1)
          echo "CLI_PATH=$CLI_PATH"
          echo "PATH=$(dirname $CLI_PATH):\$PATH" >> $GITHUB_ENV

      - name: Verify Confluent CLI Installation
        run: |
          echo "Verifying Confluent CLI..."
          which confluent
          confluent version

      - name: Read ksqlDB Queries File
        id: read-file
        run: |
          if [ ! -f "${{ github.event.inputs.ksqldb_file }}" ]; then
            echo "Error: File ${{ github.event.inputs.ksqldb_file }} does not exist."
            exit 1
          fi
          cat "${{ github.event.inputs.ksqldb_file }}" > queries.sql

      - name: Execute ksqlDB Queries
        env:
          KSQLDB_URL: ${{ secrets.KSQLDB_URL }}
          KSQLDB_API_KEY: ${{ secrets.KSQLDB_API_KEY }}
          KSQLDB_API_SECRET: ${{ secrets.KSQLDB_API_SECRET }}
        run: |
          QUERIES=$(cat queries.sql)

          RESPONSE=$(curl -s -X POST "$KSQLDB_URL/ksql" \
            -u "$KSQLDB_API_KEY:$KSQLDB_API_SECRET" \
            -H "Content-Type: application/vnd.ksql.v1+json" \
            -d "{\"ksql\": \"$QUERIES\"}")

          echo "Response from ksqlDB: $RESPONSE"

          if echo "$RESPONSE" | grep -q 'error'; then
            echo "Error executing ksqlDB queries."
            exit 1
          fi

      - name: Finish Execution
        run: echo "ksqlDB queries executed successfully."
